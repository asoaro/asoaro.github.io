import{_ as n}from"./导航解析流程-99709659.js";import{_ as c,V as s,W as h,Y as o,Z as e,X as r,a4 as l,a0 as u,$ as a,B as t}from"./framework-df2899ef.js";const _={},p=o("h1",{id:"vue-router3-导航解析流程",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#vue-router3-导航解析流程","aria-hidden":"true"},"#"),e(" Vue Router3 导航解析流程")],-1),g=o("h2",{id:"概述",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),e(" 概述")],-1),f=o("strong",null,"调用时机",-1),E=a('<h2 id="导航解析流程步骤" tabindex="-1"><a class="header-anchor" href="#导航解析流程步骤" aria-hidden="true">#</a> 导航解析流程步骤</h2><ol><li>导航被触发</li><li>在<strong>失活</strong>的组件里调用：<i>组件离开守卫</i> <code>beforeRouteLeave</code></li><li>调用：<i>全局前置守卫</i> <code>beforeEach</code></li><li>在<strong>重用</strong>的组件里调用：<i>组件更新守卫</i> <code>beforeRouteUpdate</code></li><li>在<strong>路由配置</strong>里调用：<i>路由独享守卫</i> <code>beforeEnter</code></li><li>解析路由组件，包含异步组件</li><li>在<strong>被激活</strong>的组件里调用：<i>组件进入守卫</i> <code>beforeRouteEnter</code></li><li>调用：<i>全局解析守卫</i> <code>beforeResolve</code></li><li>导航被<strong>确认</strong></li><li>调用：<i>全局后置钩子</i> <code>afterEach</code></li><li>触发 DOM 更新</li><li>调用<i>组件进入守卫</i> <code>beforeRouteEnter</code> 中传给 <code>next</code> 的回调函数，创建好的组件实例会作为回调函数的参数传入</li></ol><h2 id="导航解析流程图片" tabindex="-1"><a class="header-anchor" href="#导航解析流程图片" aria-hidden="true">#</a> 导航解析流程图片</h2><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="导航解析流程细节" tabindex="-1"><a class="header-anchor" href="#导航解析流程细节" aria-hidden="true">#</a> 导航解析流程细节</h2><h3 id="页面初始化" tabindex="-1"><a class="header-anchor" href="#页面初始化" aria-hidden="true">#</a> <i>页面初始化</i></h3><p>页面初始化时，会以当前页面设置的<strong>根路径</strong>作为导航，直接触发所有存在的守卫</p><p><strong>默认情况</strong>下根路径为 <code>/</code>，可通过<strong>重定向</strong>定义新的页面根路径，则页面初始化时就会以重定向后的路径触发全局钩子、该路径的路由守卫及该路径映射的组件内守卫</p><h3 id="路由组件" tabindex="-1"><a class="header-anchor" href="#路由组件" aria-hidden="true">#</a> <i>路由组件</i></h3><p>谨记在组件中设置的守卫，生效的前提是该组件是<strong>通过路由展示</strong>的，即为路由组件</p><h3 id="next-函数" tabindex="-1"><a class="header-anchor" href="#next-函数" aria-hidden="true">#</a> <i>next 函数</i></h3><p>结合导航解析流程可知 <code>next</code> 函数的意义是为了进入下一个流程，就像一个管道，直到最后一个才没有 <code>next</code> 函数，也就是全局后置钩子 <code>afterEach</code></p><h2 id="关于触发" tabindex="-1"><a class="header-anchor" href="#关于触发" aria-hidden="true">#</a> 关于触发</h2>',13),b={href:"https://v3.router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E5%85%A8%E5%B1%80%E5%89%8D%E7%BD%AE%E5%AE%88%E5%8D%AB",target:"_blank",rel:"noopener noreferrer"},x=a('<blockquote><p>参数或查询的改变并不会触发进入/离开的导航守卫，可通过观察 <code>$route</code> 对象来应对这些变化，或使用 <code>beforeRouteUpdate</code> 的组件内守卫</p></blockquote><h4 id="个人解读" tabindex="-1"><a class="header-anchor" href="#个人解读" aria-hidden="true">#</a> <i>个人解读</i></h4><ol><li><p>参数指的是<strong>动态路径参数</strong>，查询指的是<strong>路径所携带的查询参数</strong></p></li><li><p>无论是动态路径参数、查询参数、或 <code>hash</code> 的改变，它们都是基于<strong>被复用</strong>的组件的路由上进行路径导航，渲染所映射的路由组件</p></li><li><p>进入/离开类守卫即抛开全局类守卫，有三种：路由独享守卫、组件进入守卫、组件离开守卫</p></li></ol><p>因此，官网所提的不会触发进入/离开类守卫的<strong>主体</strong>，是被复用的组件，它只能通过操作 <code>$route</code> 对象或设置组件复用守卫 <code>beforeRouteUpdate</code>，同时也会触发全局类守卫</p><p>基于 <code>params</code>、<code>query</code>、<code>hash</code> 改变的路径所映射的组件，是能<strong>正常触发</strong>所有类的守卫</p><h2 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h2><p><i>全局前置守卫</i> <code>beforeEach</code> （常用）<br> 通常用来进行路由跳转的一些信息判断，例如判断是否登录，是否拿到对应的路由权限等等，对于验证登录，可结合<strong>路由元信息</strong>，即 <code>meta</code> 属性使用</p><p><i>全局后置钩子</i> <code>afterEach</code><br> 对于分析、更改页面标题、声明页面等辅助功能以及许多其他事情都很有用</p><p><i>组件离开守卫 </i> <code>beforeRouteLeave</code><br> 通常用来预防用户在还未保存修改前突然离开，该导航可以通过返回 <code>false</code> 来取消</p>',9);function m(R,v){const i=t("RouterLink"),d=t("ExternalLinkIcon");return s(),h("div",null,[p,g,o("p",null,[e("本文结合完整的导航解析流程分析各类导航守卫的"),f,e("，若不熟悉导航守卫及其种类，可参考 "),r(i,{to:"/%E6%8A%80%E6%9C%AF%E5%8D%9A%E6%96%87/Vue/VueRouter3%E5%AF%BC%E8%88%AA%E5%AE%88%E5%8D%AB%E7%A7%8D%E7%B1%BB.html"},{default:l(()=>[e("Vue Router3 导航守卫种类")]),_:1})]),u(" more "),E,o("p",null,[e("Vue Router3 官方文档的 "),o("a",b,[e("导航守卫"),r(d)]),e(" 中提到：")]),x])}const B=c(_,[["render",m],["__file","VueRouter3导航解析流程.html.vue"]]);export{B as default};
